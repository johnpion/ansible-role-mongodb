- name: install software
  ansible.builtin.apt:
    name: gpg
    update_cache: true
    autoclean: true

- name: add apt-key
  ansible.builtin.apt_key:
    url: "https://www.mongodb.org/static/pgp/server-{{ mongodb_version }}.asc"

- name: apt repo
  ansible.builtin.apt_repository:
    repo: "deb http://repo.mongodb.org/apt/debian {{ ansible_distribution_release }}/mongodb-org/{{ mongodb_version }} main"
  register: mongodb_apt_repo

- name: apt update
  ansible.builtin.apt:
    update_cache: true
  when: mongodb_apt_repo.changed

- name: install software
  ansible.builtin.apt:
    name:
      - mongodb-org
      - python-pymongo
    update_cache: true
    autoclean: true
  register: mongodb_install
  # notify: restart mongodb

# - name:             start mongodb
#   service:          name=mongod state=restarted
#   when:             mongodb_install.changed

- name: check if auth is enabled
  ansible.builtin.shell: "grep 'authorization: enabled' /etc/mongod.conf"
  register: mongodb_auth_enabled
  when: mongodb_admin_password is defined
  ignore_errors: true

- name: create admin
  ansible.builtin.mongodb_user:
    database: admin
    name: admin
    password: "{{ mongodb_admin_password }}"
    roles: "{{ mongodb_admin_roles }}"
  when:
    - mongodb_admin_password is defined
    - mongodb_auth_enabled.stdout.find('authorization: enabled') == -1
  register: mongodb_create_admin
  no_log: true

- name: add authorization
  ansible.builtin.lineinfile:
    path: /etc/mongod.conf
    line: "security:\n  authorization: enabled"
    insertafter: "#security:"
  when: mongodb_create_admin.changed
  register: mongodb_auth

- name: restart mongodb
  ansible.builtin.service:
    name: mongod
    state: restarted
  when: mongodb_auth.changed

- name: create user
  ansible.builtin.mongodb_user:
    login_user: admin
    login_password: "{{ mongodb_admin_password }}"
    login_database: admin
    database: "{{ item.database }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    roles: "{% if item.roles is defined %}{{ item.roles }}{% else %}{{ mongodb_default_roles }}{% endif %}"
  with_items:
    - "{{ mongodb_user }}"
  when: mongodb_user is defined
  no_log: true
  # tags:             qa
